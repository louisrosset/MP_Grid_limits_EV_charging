labs(title = "",
x = "",
y = "Proportion of households with access [%]",
# shape = "Access / No Access",
color = "Scenario") +
theme_light() +
theme(plot.title = element_text(face = "bold", size = (15)),
axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1), labels = scales::percent_format(accuracy = 1))
ggsave("figures/scenarios/IOU_access_scenarios_access.png", plot_access, width = 8.5, height = 5.5)
print(plot_access)
#Plot Access
df_plot_access = subset(df_plot, Load == "Have access")
plot_access <- ggplot(df_plot_access, aes(x = Housing, y = pct, color = Scenario)) +
facet_grid(~ IOU, scales = "free_x", space = "free_x") +
geom_point(size = 2) +
scale_color_manual(values = c("#7EE081", "#62A87C", "#00487C", "#F6F5AE")) +  # Adjust colors as needed
labs(title = "a",
x = "",
y = "Proportion of households with access [%]",
# shape = "Access / No Access",
color = "Scenario") +
theme_light() +
theme(plot.title = element_text(face = "bold", size = (15)),
axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none") +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1), labels = scales::percent_format(accuracy = 1))
#Plot No access
df_plot_no_access = subset(df_plot, Load != "Have access")
plot_no_access <- ggplot(df_plot_no_access, aes(x = Housing, y = pct, shape = Load, color = Scenario)) +
facet_grid(~ IOU, scales = "free_x", space = "free_x") +
geom_point(size = 2) +
scale_shape_manual(values = c(15, 17)) +
scale_color_manual(values = c("#7EE081", "#62A87C", "#00487C", "#F6F5AE"), guide = FALSE) +  # Adjust colors as needed
labs(title = "b",
x = "Housing Type",
y = "Proportion of households without access [%]",
shape = "Lack of power",
color = "Scenario") +
theme_light() +
theme(plot.title = element_text(face = "bold", size = (15)),
axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none") +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1), labels = scales::percent_format(accuracy = 1))
combined_plot <- grid.arrange(plot_access, plot_no_access, ncol = 1)
ggsave("figures/scenarios/IOU_access_scenarios.png", combined_plot, width = 6, height = 7.5)
SCE_ICAaccess[["hhwacc_0_ICL_pct"]] <- ifelse(SCE_ICAaccess[["ICL_kWphh"]]>0, 1, 0)
PGE_ICAaccess[["hhwacc_0_ICL_pct"]] <- ifelse(PGE_ICAaccess[["ICL_kWphh"]]>0, 1, 0)
for (t in 1:length(at)) {
name <- paste0("hhwacc_",at[t],"_ICL_pct")
SCE_ICAaccess[[name]] <- ifelse(SCE_ICAaccess[["ICL_kWphh"]]>=as.numeric(at[t]), 1, SCE_ICAaccess[["ICL_kWphh"]]/as.numeric(at[t]))
SCE_ICAaccess[[paste0("hhwacc_",at[t],"_ICL")]] <- SCE_ICAaccess[[name]]*SCE_ICAaccess$tothh_Cpoly
PGE_ICAaccess[[name]] <- ifelse(PGE_ICAaccess[["ICL_kWphh"]]>=as.numeric(at[t]), 1, PGE_ICAaccess[["ICL_kWphh"]]/as.numeric(at[t]))
PGE_ICAaccess[[paste0("hhwacc_",at[t],"_ICL")]] <- PGE_ICAaccess[[name]]*PGE_ICAaccess$tothh_Cpoly
}
###Computing number of households with access per block groups
IOU_ICAaccess_grid <-
rbind(select(PGE_ICAaccess, GEOID, IOU, tothh_Cpoly, tothh_SU_Cpoly, tothh_duplex_Cpoly, tothh_3to4_Cpoly, tothh_5to9_Cpoly, tothh_10to19_Cpoly, tothh_20to49_Cpoly, tothh_50plus_Cpoly, intersect(starts_with("hhwacc_"), ends_with("_pct"))),
select(SCE_ICAaccess, GEOID, IOU, tothh_Cpoly, tothh_SU_Cpoly, tothh_duplex_Cpoly, tothh_3to4_Cpoly, tothh_5to9_Cpoly, tothh_10to19_Cpoly, tothh_20to49_Cpoly, tothh_50plus_Cpoly, intersect(starts_with("hhwacc_"), ends_with("_pct"))))
IOU_ICAaccess_grid <- merge(IOU_ICAaccess_grid, ACS_bg_vehicles_hh[, c("GEOID", "avgveh_hh")],
by = "GEOID", all.x = TRUE) %>%
melt(id=c("IOU", "tothh_Cpoly", "avgveh_hh", "GEOID", "tothh_SU_Cpoly", "tothh_duplex_Cpoly", "tothh_3to4_Cpoly", "tothh_5to9_Cpoly", "tothh_10to19_Cpoly", "tothh_20to49_Cpoly", "tothh_50plus_Cpoly")) %>%
mutate(totveh_Cpoly = tothh_Cpoly*avgveh_hh) %>%
mutate(totveh_SU_Cpoly = tothh_SU_Cpoly*avgveh_hh) %>%
mutate(totveh_duplex_Cpoly = tothh_duplex_Cpoly*avgveh_hh) %>%
mutate(totveh_3to4_Cpoly = tothh_3to4_Cpoly*avgveh_hh) %>%
mutate(totveh_5to9_Cpoly = tothh_5to9_Cpoly*avgveh_hh) %>%
mutate(totveh_10to19_Cpoly = tothh_10to19_Cpoly*avgveh_hh) %>%
mutate(totveh_20to49_Cpoly = tothh_20to49_Cpoly*avgveh_hh) %>%
mutate(totveh_50plus_Cpoly = tothh_50plus_Cpoly*avgveh_hh) %>%
mutate(vehwacc_Cpoly = value*totveh_Cpoly) %>%    # households per Cpoly, not percent
mutate(vehwacc_SU_Cpoly = value*totveh_SU_Cpoly) %>%
mutate(vehwacc_duplex_Cpoly = value*totveh_duplex_Cpoly) %>%
mutate(vehwacc_3to4_Cpoly = value*totveh_3to4_Cpoly) %>%
mutate(vehwacc_5to9_Cpoly = value*totveh_5to9_Cpoly) %>%
mutate(vehwacc_10to19_Cpoly = value*totveh_10to19_Cpoly) %>%
mutate(vehwacc_20to49_Cpoly = value*totveh_20to49_Cpoly) %>%
mutate(vehwacc_50plus_Cpoly = value*totveh_50plus_Cpoly)%>%
group_by(IOU, GEOID, variable) %>%
summarise(avgacc_bg_pct = mean(value, na.rm=TRUE),# avg percent access in bg
totveh_bg = sum(totveh_Cpoly, na.rm=TRUE), # total number of vehicules in block group
totveh_SU_bg = sum(totveh_SU_Cpoly, na.rm=TRUE),
totveh_duplex_bg = sum(totveh_duplex_Cpoly, na.rm=TRUE),
totveh_3to4_bg = sum(totveh_3to4_Cpoly, na.rm=TRUE),
totveh_5to9_bg = sum(totveh_5to9_Cpoly, na.rm=TRUE),
totveh_10to19_bg = sum(totveh_10to19_Cpoly, na.rm=TRUE),
totveh_20to49_bg = sum(totveh_20to49_Cpoly, na.rm=TRUE),
totveh_50plus_bg = sum(totveh_50plus_Cpoly, na.rm=TRUE),
vehwacc_bg_pct = sum(vehwacc_Cpoly, na.rm=TRUE)/(sum(totveh_Cpoly, na.rm=TRUE)),
vehwacc_SU_bg_pct = sum(vehwacc_SU_Cpoly, na.rm=TRUE)/(sum(totveh_SU_Cpoly, na.rm=TRUE)),
vehwacc_duplex_bg_pct = sum(vehwacc_duplex_Cpoly, na.rm=TRUE)/(sum(totveh_duplex_Cpoly, na.rm=TRUE)),
vehwacc_3to4_bg_pct = sum(vehwacc_3to4_Cpoly, na.rm=TRUE)/(sum(totveh_3to4_Cpoly, na.rm=TRUE)),
vehwacc_5to9_bg_pct = sum(vehwacc_5to9_Cpoly, na.rm=TRUE)/(sum(totveh_5to9_Cpoly, na.rm=TRUE)),
vehwacc_10to19_bg_pct = sum(vehwacc_10to19_Cpoly, na.rm=TRUE)/(sum(totveh_10to19_Cpoly, na.rm=TRUE)),
vehwacc_20to49_bg_pct = sum(vehwacc_20to49_Cpoly, na.rm=TRUE)/(sum(totveh_20to49_Cpoly, na.rm=TRUE)),
vehwacc_50plus_bg_pct = sum(vehwacc_50plus_Cpoly, na.rm=TRUE)/(sum(totveh_50plus_Cpoly, na.rm=TRUE))
)%>%
mutate(variable = as.character(variable),
threshold = sapply(strsplit(variable, "_"), function(x) x[2]),
threshold = factor(ifelse(threshold=="0",">0",threshold), levels=c(">0",at)),
DER = factor(sapply(strsplit(variable, "_"), function(x) x[3]), levels=c("ICL")),
avgacc_bg_pct = as.numeric(avgacc_bg_pct))
###Computing total number of households with access
IOU_vehwacc_grid <- IOU_ICAaccess_grid %>%
mutate(vehwacc_bg = vehwacc_bg_pct*totveh_bg) %>%
mutate(vehwacc_SU_bg = vehwacc_SU_bg_pct*totveh_SU_bg) %>%
mutate(vehwacc_duplex_bg = vehwacc_duplex_bg_pct*totveh_duplex_bg) %>%
mutate(vehwacc_3to4_bg = vehwacc_3to4_bg_pct*totveh_3to4_bg) %>%
mutate(vehwacc_5to9_bg = vehwacc_5to9_bg_pct*totveh_5to9_bg) %>%
mutate(vehwacc_10to19_bg = vehwacc_10to19_bg_pct*totveh_10to19_bg) %>%
mutate(vehwacc_20to49_bg = vehwacc_20to49_bg_pct*totveh_20to49_bg) %>%
mutate(vehwacc_50plus_bg = vehwacc_50plus_bg_pct*totveh_50plus_bg) %>%
mutate(DER = recode(DER, 'ICL'="Load")) %>%
group_by(IOU, DER, threshold) %>%
summarise(totveh = sum(totveh_bg, na.rm=TRUE),
avgacc_pct = mean(avgacc_bg_pct, na.rm=TRUE),
vehwacc_pct = sum(vehwacc_bg, na.rm=TRUE)/sum(totveh_bg, na.rm=TRUE),
vehwacc_SU_pct = sum(vehwacc_SU_bg, na.rm=TRUE)/sum(totveh_SU_bg, na.rm=TRUE),
vehwacc_duplex_pct = sum(vehwacc_duplex_bg, na.rm=TRUE)/sum(totveh_duplex_bg, na.rm=TRUE),
vehwacc_3to4_pct = sum(vehwacc_3to4_bg, na.rm=TRUE)/sum(totveh_3to4_bg, na.rm=TRUE),
vehwacc_5to9_pct = sum(vehwacc_5to9_bg, na.rm=TRUE)/sum(totveh_5to9_bg, na.rm=TRUE),
vehwacc_10to19_pct = sum(vehwacc_10to19_bg, na.rm=TRUE)/sum(totveh_10to19_bg, na.rm=TRUE),
vehwacc_20to49_pct = sum(vehwacc_20to49_bg, na.rm=TRUE)/sum(totveh_20to49_bg, na.rm=TRUE),
vehwacc_50plus_pct = sum(vehwacc_50plus_bg, na.rm=TRUE)/sum(totveh_50plus_bg, na.rm=TRUE)) %>%
mutate(threshold = as.numeric(ifelse(as.character(threshold)==">0","0",as.character(threshold))))
lf <- melt(IOU_vehwacc_grid, id=c("IOU", "DER", "threshold", "totveh", "avgacc_pct"))
lf <- lf %>%
mutate(feature = recode(factor(variable, levels=c("vehwacc_pct","vehwacc_SU_pct","vehwacc_duplex_pct","vehwacc_3to4_pct","vehwacc_5to9_pct", "vehwacc_10to19_pct", "vehwacc_20to49_pct", "vehwacc_50plus_pct")),
'vehwacc_pct'="All", 'vehwacc_SU_pct'="Single Unit", 'vehwacc_duplex_pct'="Duplex",
'vehwacc_3to4_pct'="3-4 units", 'vehwacc_5to9_pct'="5-9 units", 'vehwacc_10to19_pct'="10-19 units", 'vehwacc_20to49_pct'="20-49 units", 'vehwacc_50plus_pct'="More than 50 units"))
a <- ggplot(filter(lf), aes(x=threshold)) + plotops
print(a)
ggsave("figures/access/IOU_access_vehicles_size.png", a, width=8, height=5.5)
# For the box grid plot
bg <- IOU_ICAaccess_grid %>%
filter(!is.na(vehwacc_bg_pct)) %>%
ggplot(aes(y=vehwacc_bg_pct)) + plotops_bggrid
bg
# ggsave("figures/access/IOU_access_bg_ICL.png", bg, width=8.5, height=5.5)
#ggsave("figures/access/IOU_access_bg_ICL.pdf", bg, width=8.5, height=6)
# For the line and point grid plot
all <- IOU_vehwacc_grid %>%
ggplot(aes(x=threshold, y=vehwacc_pct)) + plotops_allgrid
all
# ggsave("figures/access/IOU_access_all_ICL.png", all, width=8.5, height=5.5)
# Combine the plots
# plot_grid(all, bg, labels=c('a','b'), label_size=12, rel_widths=c(0.25,0.75), rel_heights=c(1,1))
# ggsave("figures/access/IOU_access_comb_ICL.png", width=11.5, height=6)
#ggsave("figures/access/IOU_access_comb_ICL.pdf", width=11.5, height=6)
###Computing number of households with access per county
IOU_ICAaccess_grid_cty <-
rbind(select(PGE_ICAaccess, IOU, tothh_Cpoly, GEOID, county, intersect(starts_with("hhwacc_"), ends_with("_pct"))),
select(SCE_ICAaccess, IOU, tothh_Cpoly, GEOID, county, intersect(starts_with("hhwacc_"), ends_with("_pct"))))
IOU_ICAaccess_grid_cty <- merge(IOU_ICAaccess_grid_cty, ACS_bg_vehicles_hh[, c("GEOID", "avgveh_hh")],
by = "GEOID", all.x = TRUE) %>%
select(-GEOID) %>%
melt(id=c("IOU", "tothh_Cpoly", "avgveh_hh", "county")) %>%
mutate(totveh_Cpoly = tothh_Cpoly*avgveh_hh) %>%
mutate(vehwacc_Cpoly = value*totveh_Cpoly) %>%    # households per Cpoly, not percent
group_by(IOU, county, variable) %>%
summarise(avgacc_cty_pct = mean(value, na.rm=TRUE), # avg percent access in county
totveh_cty = sum(totveh_Cpoly, na.rm=TRUE), # total number of households in county
vehwacc_cty_pct = sum(vehwacc_Cpoly, na.rm=TRUE)/sum(totveh_Cpoly, na.rm=TRUE)) %>%
mutate(variable = as.character(variable),
threshold = sapply(strsplit(variable, "_"), function(x) x[2]),
threshold = factor(ifelse(threshold=="0",">0",threshold), levels=c(">0",at)),
DER = factor(sapply(strsplit(variable, "_"), function(x) x[3]), levels=c("ICL")),
avgacc_cty_pct = as.numeric(avgacc_cty_pct))
###Cleaning data to exclude counties with too few households (we consider counties with at least 100 households)
IOU_ICAaccess_grid_cty <- IOU_ICAaccess_grid_cty %>%
filter(!(county == "Alpine"),
!(county == "Fresno" & IOU == "SCE"),
!(county == "Inyo" & IOU == "PGE"),
!(county == "Mariposa" & IOU == "SCE"),
!(county == "Mono" & IOU == "PGE"),
!(county == "Tuolumne" & IOU == "SCE"),
!(county == "Ventura" & IOU == "PGE"),
!(county == "Imperial"),
!(county == "Lassen"),
!(county == "Madera"),
!(county == "San Diego"),
!(county == "Siskiyou"),
!(county == "Trinity"))
#Plotting acess results for 1.5 and 4.5kW threshold
plot <- IOU_ICAaccess_grid_cty  %>%
filter(threshold %in% c("1.5", "4.5"))
plot <- dcast(plot, IOU + county + totveh_cty ~ threshold,
value.var = "vehwacc_cty_pct") %>%
group_by(IOU, county) %>%
rename("Access_1.5" = '1.5', "Access_4.5" = '4.5') %>%
arrange(IOU, Access_1.5) %>%
ungroup()
plot <- plot %>%
distinct(IOU, county, .keep_all = TRUE)
# Setting the levels of 'county' factor based on the order in 'plot'
plot$county <- factor(plot$county, levels = unique(plot$county))
plot$household_category <- cut(plot$totveh_cty,
breaks = c(-Inf, 10000, 100000, 1000000, Inf),
labels = c("<10", "10-100", "100-1'000", ">1'000"),
right = FALSE)
IOU_access_county_plot <- ggplot(plot) +
geom_segment(aes(x = county, xend = county,
y = Access_1.5, yend = Access_4.5,
color = household_category), size = 1) +
geom_crossbar(aes(x = county, y = Access_1.5, ymin = Access_1.5, ymax = Access_1.5),
width = 0.6, color = "black", size = 0.3) +
geom_crossbar(aes(x = county, y = Access_4.5, ymin = Access_4.5, ymax = Access_4.5),
width = 0.6, color = "black", size = 0.4) +
geom_col(aes(x = county, y = Access_4.5, fill = household_category), width = 0.6)  +
facet_grid(~ IOU, scales = "free_x", space = "free_x") +
labs(
x = "County",
y = "Proportion of households with access",
color=expression("Households x10"^"3"),
fill=expression("Households x10"^"3")
) + theme_light() +
theme(axis.text.x = element_text(size = 9, angle = 45, hjust = 1),
legend.margin=margin(), legend.text=element_text(size=10)) +
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
scale_color_discrete_sequential(palette="Viridis", nmax=4, order=4:1) +
scale_fill_discrete_sequential(palette="Viridis", nmax=4, order=4:1) +
guides(shape=guide_legend(nrow=4,title.position="top"))
ggsave("figures/scenarios/IOU_access_county.png", IOU_access_county_plot,  width = 12, height = 6.5, units = "in")
print(IOU_access_county_plot)
accgr1 <- as.data.frame(IOU_hhwacc_grid) %>%
select(c("IOU","DER", "threshold", "hhwacc_pct")) %>%
filter((threshold==0.0 & DER=="Load") | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(DER = ifelse(DER=="Load", "ICL")) %>%
mutate(DER = paste0(DER," ",threshold)) %>% select(-c("threshold")) %>%
mutate(hhwacc_pct = round(hhwacc_pct*100, digits=0)) %>%
mutate(variable="full_territory")
acchouse <- as.data.frame(IOU_hhwacc_grid) %>%
select(-c("DER", "tothh", "avgacc_pct")) %>%
filter((threshold==0.0) | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(across(contains("pct"), ~ round(. * 100, digits = 0))) %>%
dplyr::rename("All"='hhwacc_pct', "Single Unit"='hhwacc_SU_pct', "Duplex"='hhwacc_duplex_pct',
"3-4 units"='hhwacc_3to4_pct', "5-9 units"='hhwacc_5to9_pct', "10-19 units"='hhwacc_10to19_pct', "20-49 units"='hhwacc_20to49_pct', "More than 50 units"='hhwacc_50plus_pct')
acctothh <- IOU_ICAaccess_grid %>%
group_by(IOU, DER, threshold) %>%
summarise(tothh = sum(tothh_bg, na.rm=TRUE),
tothh_SU = sum(tothh_SU_bg, na.rm=TRUE),
tothh_duplex = sum(tothh_duplex_bg, na.rm=TRUE),
tothh_3to4 = sum(tothh_3to4_bg, na.rm=TRUE),
tothh_5to9 = sum(tothh_5to9_bg, na.rm=TRUE),
tothh_10to19 = sum(tothh_10to19_bg, na.rm=TRUE),
tothh_20to49 = sum(tothh_20to49_bg, na.rm=TRUE),
tothh_50plus = sum(tothh_50plus_bg, na.rm=TRUE))%>%
select(-c("threshold")) %>%
slice(1)%>%
dplyr::rename("All"='tothh', "Single Unit"='tothh_SU', "Duplex"='tothh_duplex',
"3-4 units"='tothh_3to4', "5-9 units"='tothh_5to9', "10-19 units"='tothh_10to19', "20-49 units"='tothh_20to49', "More than 50 units"='tothh_50plus')
accgr1 <- as.data.frame(IOU_vehwacc_grid) %>%
select(c("IOU","DER", "threshold", "vehwacc_pct")) %>%
filter((threshold==0.0 & DER=="Load") | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(DER = ifelse(DER=="Load", "ICL")) %>%
mutate(DER = paste0(DER," ",threshold)) %>% select(-c("threshold")) %>%
mutate(vehwacc_pct = round(vehwacc_pct*100, digits=0)) %>%
mutate(variable="full_territory")
accgr1 <- dcast(accgr1, IOU+variable~DER, value.var="vehwacc_pct")
IOU_accessbg_grid_stats <- IOU_ICAaccess_grid %>%
filter(!is.na(vehwacc_bg_pct) & !is.na(threshold)) %>%
group_by(IOU, threshold) %>%
summarise(
median = median(vehwacc_bg_pct, na.rm = TRUE),
lower_quartile = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE),
upper_quartile = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE),
min = min(vehwacc_bg_pct, na.rm = TRUE),
max = max(vehwacc_bg_pct, na.rm = TRUE),
iqr = IQR(vehwacc_bg_pct, na.rm = TRUE),
lower_whisker = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE) - 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
upper_whisker = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE) + 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
.groups = "drop" # This will prevent the result from being grouped
) %>%
# Ensuring the whiskers don't go beyond the actual data points
mutate(
lower_whisker = pmax(lower_whisker, min, na.rm = TRUE),
upper_whisker = pmin(upper_whisker, max, na.rm = TRUE)
)
#accgr2 <- rbind(PGE_accessbg_grid, SCE_accessbg_grid) %>%
accgr2 <- IOU_accessbg_grid_stats %>%
select(c("IOU","threshold", "median", "lower_quartile","upper_quartile")) %>%
dplyr::rename("25th pctl"="lower_quartile", "75th pctl"="upper_quartile") %>%
mutate(median = round(median*100, digits=0),
`25th pctl` = round(`25th pctl` * 100, digits = 0),
`75th pctl` = round(`75th pctl` * 100, digits = 0)) %>%
filter(threshold=='>0' | threshold=='1.5' | threshold=='4.5' | threshold=='10.')
accgr2 <- accgr2 %>%
pivot_longer(
cols = c(median, `25th pctl`, `75th pctl`),
names_to = "variable",
values_to = "value"
) %>% pivot_wider(
names_from = threshold,
values_from = value,
names_prefix = "threshold_"
) %>%
select(IOU, variable, `threshold_>0`, `threshold_1.5`, `threshold_4.5`, `threshold_10.`) %>%
arrange(IOU, variable) %>%
rename(
`ICL 0` = `threshold_>0`,
`ICL 1.5` = threshold_1.5,
`ICL 4.5` = threshold_4.5,
`ICL 10` = threshold_10.
)
# accgr2 <- dcast(accgr2, IOU+variable~DER, value.var="value")
accgr <- rbind(accgr1, filter(accgr2, variable=="75th pctl"|variable=="median"|variable=="25th pctl"))
accgr
rm(accgr1,accgr2)
accgr1 <- as.data.frame(IOU_vehwacc_grid) %>%
select(c("IOU","DER", "threshold", "vehwacc_pct")) %>%
filter((threshold==0.0 & DER=="Load") | threshold==1.5 | threshold==7.0 | threshold==10.0) %>%
mutate(DER = ifelse(DER=="Load", "ICL")) %>%
mutate(DER = paste0(DER," ",threshold)) %>% select(-c("threshold")) %>%
mutate(vehwacc_pct = round(vehwacc_pct*100, digits=0)) %>%
mutate(variable="full_territory")
accgr1 <- dcast(accgr1, IOU+variable~DER, value.var="vehwacc_pct")
IOU_accessbg_grid_stats <- IOU_ICAaccess_grid %>%
filter(!is.na(vehwacc_bg_pct) & !is.na(threshold)) %>%
group_by(IOU, threshold) %>%
summarise(
median = median(vehwacc_bg_pct, na.rm = TRUE),
lower_quartile = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE),
upper_quartile = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE),
min = min(vehwacc_bg_pct, na.rm = TRUE),
max = max(vehwacc_bg_pct, na.rm = TRUE),
iqr = IQR(vehwacc_bg_pct, na.rm = TRUE),
lower_whisker = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE) - 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
upper_whisker = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE) + 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
.groups = "drop" # This will prevent the result from being grouped
) %>%
# Ensuring the whiskers don't go beyond the actual data points
mutate(
lower_whisker = pmax(lower_whisker, min, na.rm = TRUE),
upper_whisker = pmin(upper_whisker, max, na.rm = TRUE)
)
#accgr2 <- rbind(PGE_accessbg_grid, SCE_accessbg_grid) %>%
accgr2 <- IOU_accessbg_grid_stats %>%
select(c("IOU","threshold", "median", "lower_quartile","upper_quartile")) %>%
dplyr::rename("25th pctl"="lower_quartile", "75th pctl"="upper_quartile") %>%
mutate(median = round(median*100, digits=0),
`25th pctl` = round(`25th pctl` * 100, digits = 0),
`75th pctl` = round(`75th pctl` * 100, digits = 0)) %>%
filter(threshold=='>0' | threshold=='1.5' | threshold=='4.5' | threshold=='10.')
accgr2 <- accgr2 %>%
pivot_longer(
cols = c(median, `25th pctl`, `75th pctl`),
names_to = "variable",
values_to = "value"
) %>% pivot_wider(
names_from = threshold,
values_from = value,
names_prefix = "threshold_"
) %>%
select(IOU, variable, `threshold_>0`, `threshold_1.5`, `threshold_4.5`, `threshold_10.`) %>%
arrange(IOU, variable) %>%
rename(
`ICL 0` = `threshold_>0`,
`ICL 1.5` = threshold_1.5,
`ICL 4.5` = threshold_4.5,
`ICL 10` = threshold_10.
)
# accgr2 <- dcast(accgr2, IOU+variable~DER, value.var="value")
accgr <- rbind(accgr1, filter(accgr2, variable=="75th pctl"|variable=="median"|variable=="25th pctl"))
accgr1 <- as.data.frame(IOU_vehwacc_grid) %>%
select(c("IOU","DER", "threshold", "vehwacc_pct")) %>%
filter((threshold==0.0 & DER=="Load") | threshold==1.5 | threshold==7.0 | threshold==10.0) %>%
mutate(DER = ifelse(DER=="Load", "ICL")) %>%
mutate(DER = paste0(DER," ",threshold)) %>% select(-c("threshold")) %>%
mutate(vehwacc_pct = round(vehwacc_pct*100, digits=0)) %>%
mutate(variable="full_territory")
accgr1 <- dcast(accgr1, IOU+variable~DER, value.var="vehwacc_pct")
IOU_accessbg_grid_stats <- IOU_ICAaccess_grid %>%
filter(!is.na(vehwacc_bg_pct) & !is.na(threshold)) %>%
group_by(IOU, threshold) %>%
summarise(
median = median(vehwacc_bg_pct, na.rm = TRUE),
lower_quartile = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE),
upper_quartile = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE),
min = min(vehwacc_bg_pct, na.rm = TRUE),
max = max(vehwacc_bg_pct, na.rm = TRUE),
iqr = IQR(vehwacc_bg_pct, na.rm = TRUE),
lower_whisker = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE) - 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
upper_whisker = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE) + 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
.groups = "drop" # This will prevent the result from being grouped
) %>%
# Ensuring the whiskers don't go beyond the actual data points
mutate(
lower_whisker = pmax(lower_whisker, min, na.rm = TRUE),
upper_whisker = pmin(upper_whisker, max, na.rm = TRUE)
)
#accgr2 <- rbind(PGE_accessbg_grid, SCE_accessbg_grid) %>%
accgr2 <- IOU_accessbg_grid_stats %>%
select(c("IOU","threshold", "median", "lower_quartile","upper_quartile")) %>%
dplyr::rename("25th pctl"="lower_quartile", "75th pctl"="upper_quartile") %>%
mutate(median = round(median*100, digits=0),
`25th pctl` = round(`25th pctl` * 100, digits = 0),
`75th pctl` = round(`75th pctl` * 100, digits = 0)) %>%
filter(threshold=='>0' | threshold=='1.5' | threshold=='7.0' | threshold=='10.')
accgr2 <- accgr2 %>%
pivot_longer(
cols = c(median, `25th pctl`, `75th pctl`),
names_to = "variable",
values_to = "value"
) %>% pivot_wider(
names_from = threshold,
values_from = value,
names_prefix = "threshold_"
) %>%
select(IOU, variable, `threshold_>0`, `threshold_1.5`, `threshold_4.5`, `threshold_10.`) %>%
arrange(IOU, variable) %>%
rename(
`ICL 0` = `threshold_>0`,
`ICL 1.5` = threshold_1.5,
`ICL 7` = threshold_7.0,
`ICL 10` = threshold_10.
)
accgr1 <- as.data.frame(IOU_vehwacc_grid) %>%
select(c("IOU","DER", "threshold", "vehwacc_pct")) %>%
filter((threshold==0.0 & DER=="Load") | threshold==1.5 | threshold==7.0 | threshold==10.0) %>%
mutate(DER = ifelse(DER=="Load", "ICL")) %>%
mutate(DER = paste0(DER," ",threshold)) %>% select(-c("threshold")) %>%
mutate(vehwacc_pct = round(vehwacc_pct*100, digits=0)) %>%
mutate(variable="full_territory")
accgr1 <- dcast(accgr1, IOU+variable~DER, value.var="vehwacc_pct")
IOU_accessbg_grid_stats <- IOU_ICAaccess_grid %>%
filter(!is.na(vehwacc_bg_pct) & !is.na(threshold)) %>%
group_by(IOU, threshold) %>%
summarise(
median = median(vehwacc_bg_pct, na.rm = TRUE),
lower_quartile = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE),
upper_quartile = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE),
min = min(vehwacc_bg_pct, na.rm = TRUE),
max = max(vehwacc_bg_pct, na.rm = TRUE),
iqr = IQR(vehwacc_bg_pct, na.rm = TRUE),
lower_whisker = quantile(vehwacc_bg_pct, 0.25, na.rm = TRUE) - 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
upper_whisker = quantile(vehwacc_bg_pct, 0.75, na.rm = TRUE) + 1.5 * IQR(vehwacc_bg_pct, na.rm = TRUE),
.groups = "drop" # This will prevent the result from being grouped
) %>%
# Ensuring the whiskers don't go beyond the actual data points
mutate(
lower_whisker = pmax(lower_whisker, min, na.rm = TRUE),
upper_whisker = pmin(upper_whisker, max, na.rm = TRUE)
)
#accgr2 <- rbind(PGE_accessbg_grid, SCE_accessbg_grid) %>%
accgr2 <- IOU_accessbg_grid_stats %>%
select(c("IOU","threshold", "median", "lower_quartile","upper_quartile")) %>%
dplyr::rename("25th pctl"="lower_quartile", "75th pctl"="upper_quartile") %>%
mutate(median = round(median*100, digits=0),
`25th pctl` = round(`25th pctl` * 100, digits = 0),
`75th pctl` = round(`75th pctl` * 100, digits = 0)) %>%
filter(threshold=='>0' | threshold=='1.5' | threshold=='7.0' | threshold=='10.')
accgr2 <- accgr2 %>%
pivot_longer(
cols = c(median, `25th pctl`, `75th pctl`),
names_to = "variable",
values_to = "value"
) %>% pivot_wider(
names_from = threshold,
values_from = value,
names_prefix = "threshold_"
) %>%
select(IOU, variable, `threshold_>0`, `threshold_1.5`, `threshold_7.0`, `threshold_10.`) %>%
arrange(IOU, variable) %>%
rename(
`ICL 0` = `threshold_>0`,
`ICL 1.5` = threshold_1.5,
`ICL 7` = threshold_7.0,
`ICL 10` = threshold_10.
)
# accgr2 <- dcast(accgr2, IOU+variable~DER, value.var="value")
accgr <- rbind(accgr1, filter(accgr2, variable=="75th pctl"|variable=="median"|variable=="25th pctl"))
accgr
rm(accgr1,accgr2)
acchouse <- as.data.frame(IOU_vehwacc_grid) %>%
select(-c("DER", "tothh", "avgacc_pct")) %>%
filter((threshold==0.0) | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(across(contains("pct"), ~ round(. * 100, digits = 0))) %>%
dplyr::rename("All"='hhwacc_pct', "Single Unit"='hhwacc_SU_pct', "Duplex"='hhwacc_duplex_pct',
"3-4 units"='hhwacc_3to4_pct', "5-9 units"='hhwacc_5to9_pct', "10-19 units"='hhwacc_10to19_pct', "20-49 units"='hhwacc_20to49_pct', "More than 50 units"='hhwacc_50plus_pct')
acchouse <- as.data.frame(IOU_vehwacc_grid) %>%
select(-c("DER", "totveh", "avgacc_pct")) %>%
filter((threshold==0.0) | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(across(contains("pct"), ~ round(. * 100, digits = 0))) %>%
dplyr::rename("All"='hhwacc_pct', "Single Unit"='hhwacc_SU_pct', "Duplex"='hhwacc_duplex_pct',
"3-4 units"='hhwacc_3to4_pct', "5-9 units"='hhwacc_5to9_pct', "10-19 units"='hhwacc_10to19_pct', "20-49 units"='hhwacc_20to49_pct', "More than 50 units"='hhwacc_50plus_pct')
acchouse <- as.data.frame(IOU_vehwacc_grid) %>%
select(-c("DER", "totveh", "avgacc_pct")) %>%
filter((threshold==0.0) | threshold==1.5 | threshold==4.5 | threshold==10.0) %>%
mutate(across(contains("pct"), ~ round(. * 100, digits = 0))) %>%
dplyr::rename("All"='vehwacc_pct', "Single Unit"='vehwacc_SU_pct', "Duplex"='vehwacc_duplex_pct',
"3-4 units"='vehwacc_3to4_pct', "5-9 units"='vehwacc_5to9_pct', "10-19 units"='vehwacc_10to19_pct', "20-49 units"='vehwacc_20to49_pct', "More than 50 units"='vehwacc_50plus_pct')
acchouse
acchouse <- as.data.frame(IOU_vehwacc_grid) %>%
select(-c("DER", "totveh", "avgacc_pct")) %>%
filter((threshold==0.0) | threshold==1.5 | threshold==7.0 | threshold==10.0) %>%
mutate(across(contains("pct"), ~ round(. * 100, digits = 0))) %>%
dplyr::rename("All"='vehwacc_pct', "Single Unit"='vehwacc_SU_pct', "Duplex"='vehwacc_duplex_pct',
"3-4 units"='vehwacc_3to4_pct', "5-9 units"='vehwacc_5to9_pct', "10-19 units"='vehwacc_10to19_pct', "20-49 units"='vehwacc_20to49_pct', "More than 50 units"='vehwacc_50plus_pct')
acchouse
acctotveh <- IOU_ICAaccess_grid %>%
group_by(IOU, DER, threshold) %>%
summarise(totveh = sum(totveh_bg, na.rm=TRUE),
totveh_SU = sum(totveh_SU_bg, na.rm=TRUE),
totveh_duplex = sum(totveh_duplex_bg, na.rm=TRUE),
totveh_3to4 = sum(totveh_3to4_bg, na.rm=TRUE),
totveh_5to9 = sum(totveh_5to9_bg, na.rm=TRUE),
totveh_10to19 = sum(totveh_10to19_bg, na.rm=TRUE),
totveh_20to49 = sum(totveh_20to49_bg, na.rm=TRUE),
totveh_50plus = sum(totveh_50plus_bg, na.rm=TRUE))%>%
select(-c("threshold")) %>%
slice(1)%>%
dplyr::rename("All"='totveh', "Single Unit"='totveh_SU', "Duplex"='totveh_duplex',
"3-4 units"='totveh_3to4', "5-9 units"='totveh_5to9', "10-19 units"='totveh_10to19', "20-49 units"='totveh_20to49', "More than 50 units"='totveh_50plus')
acctotveh
